// Code generated by protoc-gen-go. DO NOT EDIT.
// source: worm.proto

/*
Package boundless_services is a generated protocol buffer package.

It is generated from these files:
	worm.proto

It has these top-level messages:
	Command
	Response
*/
package boundless_services

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Command_ContextType int32

const (
	Command_DESKTOP Command_ContextType = 0
	Command_WEB     Command_ContextType = 1
	Command_ANDROID Command_ContextType = 2
	Command_IOS     Command_ContextType = 3
)

var Command_ContextType_name = map[int32]string{
	0: "DESKTOP",
	1: "WEB",
	2: "ANDROID",
	3: "IOS",
}
var Command_ContextType_value = map[string]int32{
	"DESKTOP": 0,
	"WEB":     1,
	"ANDROID": 2,
	"IOS":     3,
}

func (x Command_ContextType) String() string {
	return proto.EnumName(Command_ContextType_name, int32(x))
}
func (Command_ContextType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

// The request command.
type Command struct {
	Action  string              `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	Data    []byte              `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Context Command_ContextType `protobuf:"varint,3,opt,name=context,enum=boundless.services.Command_ContextType" json:"context,omitempty"`
}

func (m *Command) Reset()                    { *m = Command{} }
func (m *Command) String() string            { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()               {}
func (*Command) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Command) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *Command) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Command) GetContext() Command_ContextType {
	if m != nil {
		return m.Context
	}
	return Command_DESKTOP
}

// The response from the service.
type Response struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Command)(nil), "boundless.services.Command")
	proto.RegisterType((*Response)(nil), "boundless.services.Response")
	proto.RegisterEnum("boundless.services.Command_ContextType", Command_ContextType_name, Command_ContextType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for WormService service

type WormServiceClient interface {
	// Sends a command
	SendCommand(ctx context.Context, in *Command, opts ...grpc.CallOption) (*Response, error)
}

type wormServiceClient struct {
	cc *grpc.ClientConn
}

func NewWormServiceClient(cc *grpc.ClientConn) WormServiceClient {
	return &wormServiceClient{cc}
}

func (c *wormServiceClient) SendCommand(ctx context.Context, in *Command, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/boundless.services.WormService/SendCommand", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for WormService service

type WormServiceServer interface {
	// Sends a command
	SendCommand(context.Context, *Command) (*Response, error)
}

func RegisterWormServiceServer(s *grpc.Server, srv WormServiceServer) {
	s.RegisterService(&_WormService_serviceDesc, srv)
}

func _WormService_SendCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Command)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WormServiceServer).SendCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/boundless.services.WormService/SendCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WormServiceServer).SendCommand(ctx, req.(*Command))
	}
	return interceptor(ctx, in, info, handler)
}

var _WormService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "boundless.services.WormService",
	HandlerType: (*WormServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendCommand",
			Handler:    _WormService_SendCommand_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "worm.proto",
}

func init() { proto.RegisterFile("worm.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 251 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0xcf, 0x2f, 0xca,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x4a, 0xca, 0x2f, 0xcd, 0x4b, 0xc9, 0x49, 0x2d,
	0x2e, 0xd6, 0x2b, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x2d, 0x56, 0xda, 0xcc, 0xc8, 0xc5, 0xee,
	0x9c, 0x9f, 0x9b, 0x9b, 0x98, 0x97, 0x22, 0x24, 0xc6, 0xc5, 0x96, 0x98, 0x5c, 0x92, 0x99, 0x9f,
	0x27, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x19, 0x04, 0xe5, 0x09, 0x09, 0x71, 0xb1, 0xa4, 0x24, 0x96,
	0x24, 0x4a, 0x30, 0x29, 0x30, 0x6a, 0xf0, 0x04, 0x81, 0xd9, 0x42, 0x8e, 0x5c, 0xec, 0xc9, 0xf9,
	0x79, 0x25, 0xa9, 0x15, 0x25, 0x12, 0xcc, 0x0a, 0x8c, 0x1a, 0x7c, 0x46, 0xea, 0x7a, 0x98, 0xa6,
	0xeb, 0x41, 0x4d, 0xd6, 0x73, 0x86, 0x28, 0x0d, 0xa9, 0x2c, 0x48, 0x0d, 0x82, 0xe9, 0x53, 0xb2,
	0xe4, 0xe2, 0x46, 0x12, 0x17, 0xe2, 0xe6, 0x62, 0x77, 0x71, 0x0d, 0xf6, 0x0e, 0xf1, 0x0f, 0x10,
	0x60, 0x10, 0x62, 0xe7, 0x62, 0x0e, 0x77, 0x75, 0x12, 0x60, 0x04, 0x89, 0x3a, 0xfa, 0xb9, 0x04,
	0xf9, 0x7b, 0xba, 0x08, 0x30, 0x81, 0x44, 0x3d, 0xfd, 0x83, 0x05, 0x98, 0x95, 0x54, 0xb8, 0x38,
	0x82, 0x52, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0x24, 0xb8, 0xd8, 0x73, 0x53, 0x8b, 0x8b,
	0x13, 0xd3, 0x53, 0xa1, 0xce, 0x86, 0x71, 0x8d, 0x22, 0xb9, 0xb8, 0xc3, 0xf3, 0x8b, 0x72, 0x83,
	0x21, 0xae, 0x11, 0xf2, 0xe2, 0xe2, 0x0e, 0x4e, 0xcd, 0x4b, 0x81, 0xf9, 0x56, 0x1a, 0x8f, 0x83,
	0xa5, 0x64, 0xb0, 0x49, 0xc2, 0xac, 0x54, 0x62, 0x48, 0x62, 0x03, 0x87, 0xa8, 0x31, 0x20, 0x00,
	0x00, 0xff, 0xff, 0xad, 0xcd, 0xed, 0x73, 0x5f, 0x01, 0x00, 0x00,
}
